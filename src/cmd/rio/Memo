===== src/cmd/rc/exec.c ======
  
        :
        rcmain = flag['m']?flag['m'][0]:Rcmain; 
        :
        setvar("rcname", newword(argv[0], (word *)0));
        i = 0;
        bootstrap[i++].i = 1;
        bootstrap[i++].f = Xmark;
        bootstrap[i++].f = Xword;
         :
        bootstrap[i++].s = rcmain;   //% ?
        :
        start(bootstrap, 1, (var *)0);
        :

=============== plan9/rc/lib/rcmain ===================

# rcmain: Plan 9 version
if(~ $#home 0) home=/
if(~ $#ifs 0) ifs='     
'
switch($#prompt){
case 0
        prompt=('% ' '  ')
case 1
        prompt=($prompt '       ')
}
if(~ $rcname ?.out) prompt=('broken! ' '        ')
if(flag p) path=/bin
if not{
        finit
        if(~ $#path 0) path=(. /bin)
}
fn sigexit
if(! ~ $#cflag 0){
        if(flag l && /bin/test -r $home/lib/profile) . $home/lib/profile
        status=''
        eval $cflag
}
if not if(flag i){
        if(flag l && /bin/test -r $home/lib/profile) . $home/lib/profile
        status=''
        if(! ~ $#* 0) . $*
        . -i '#d/0'
}
if not if(~ $#* 0) . '#d/0'
if not{
        status=''
        . $*
}
exit $status


===== plan9/usr/glenda/lib/profile ======

bind -a $home/bin/rc /bin
bind -a $home/bin/$cputype /bin
bind -c tmp /tmp
if(! syscall create /tmp/xxx 1 0666 >[2]/dev/null)
        ramfs   # in case we're running off a cd
font = /lib/font/bit/pelm/euro.9.font
upas/fs
fn cd { builtin cd $* && awd }  # for acme
switch($service){
case terminal
        plumber
        echo -n accelerated > '#m/mousectl'
        echo -n 'res 3' > '#m/mousectl'
        prompt=('term% ' '      ')
        fn term%{ $* }
        exec rio -i riostart
case cpu
        if (test -e /mnt/term/mnt/wsys) { # rio already running
                bind -a /mnt/term/mnt/wsys /dev
                if(test -w /dev/label)
                        echo -n $sysname > /dev/label
        }
        bind /mnt/term/dev/cons /dev/cons
        bind /mnt/term/dev/consctl /dev/consctl
        bind -a /mnt/term/dev /dev
        prompt=('cpu% ' '       ')
        fn cpu%{ $* }
        news
        if (! test -e /mnt/term/mnt/wsys) {     # cpu call from drawterm
                font=/lib/font/bit/pelm/latin1.8.font
                exec rio
        }
case con
        prompt=('cpu% ' '       ')
        news
}


=========== plan9/usr/glenda/bin/rc/riostart ===============-

#!/bin/rc

scr=(`{cat /dev/draw/new >[2]/dev/null || status=''})
wid=$scr(11)
ht=$scr(12)

window 0,0,161,117 stats -lmisce
window 161,0,560,117 faces -i

if(~ `{screensize} small)
        dump=acme.dump.small
if not
        dump=acme.dump

a=`{echo $wid-35 | hoc }
window 60,90,$a,$ht acme -l lib/$dump
window 20,140,610,450 /usr/glenda/lib/first.window


========== plan9/rc/bin/window ================-

#!/bin/rc

fn checkwsys{
        if(~ $wsys ''){
                echo  'window: $wsys not defined'
                exit bad
        }
}

# original version used mount to do the work
fn oldway{
        switch($#*){
        case 0 1
                echo usage: window '''minx miny maxx maxy''' cmd args ...
                exit usage
        }
        
        checkwsys
        
        dir = /mnt/wsys
        srv = $wsys
        
        rfork ne
        {
                if(x=`{cat /dev/ppid}; mount $srv $dir N`{{echo $x $1 }| sed 's/
^ //g;s/ +/,/g'}){
                        shift
                        bind -b $dir /dev
                        echo -n `{basename $1} > /dev/label >[2] /dev/null
                        exec $* < /dev/cons > /dev/cons >[2] /dev/cons
                }
        }&
}

# if argument is of form '100 100 200 200' or '100,100,200,200' use old way
if(~ $1 *[0-9][' ,'][0-9]*){
        oldway $*
        exit
}

# geometry parameters are:
#       -r 0 0 100 100
#       -dx n
#       -dy n
#       -minx n
#       -miny n
#       -maxx n
#       -maxy n
# where n can be a number, to set the value, or +number or -number to change it

# find wctl file
fn getwctl{
        if(~ $wctl ''){
                if(test -f /dev/wctl) echo /dev/wctl
                if not if(test -f /mnt/term/dev/wctl) echo /mnt/term/dev/wctl
                if not if(~ $service cpu) echo /mnt/term/srv/riowctl.*.*
                if not {
                        echo window: '$wctl' not defined >[1=2]
                        exit usage
                }
        }
        if not echo $wctl
}

# use mount to make local window
if(~ $1 -m){
        shift

        checkwsys
        
        dir = /mnt/wsys
        srv = $wsys
        rfork ne
        {
                unmount /mnt/acme /dev >[2]/dev/null
                if(mount $srv $dir 'new -pid '^`{cat /dev/ppid}^' '$"*){
                        bind -b $dir /dev
                        # toss geometry parameters to find command
                        while(~ $1 -*)
                                switch($1){
                                case -dx -dy -minx -miny -maxx -maxy
                                        shift 2
                                case -r
                                        shift 5
                                case -scroll
                                        shift
                                case -noscroll
                                        shift
                                case -hide
                                        shift
                                }
                        if(~ $#* 0) cmd = rc
                        if not cmd = $*
                        echo -n `{basename $cmd(1)} > /dev/label >[2] /dev/null
                        exec $cmd < /dev/cons > /dev/cons >[2] /dev/cons
                }
        }&
}

if not echo new -cd `{pwd} $* >> `{getwctl}


